function ObjectiveModule::onCreate(%this)
{
}

function ObjectiveModule::onDestroy(%this)
{
}

//This is called when the server is initially set up by the game application
function ObjectiveModule::initServer(%this)
{
   if(!isObject(ImportantObjectsList))
   {
      new ArrayObject(ImportantObjectsList);
   }
   
   %this.queueExec("./scripts/server/Objective");
   %this.queueExec("./scripts/server/serverCommands");
   %this.queueExec("./scripts/server/ObjectiveTemplate");
   %this.queueExec("./scripts/managedData/managedObjectiveData");
   %this.queueExec("./scripts/server/interop/fileCommands");
   %this.queueExec("./scripts/server/interop/inventory");
}

//This is called when the server is created for an actual game/map to be played
function ObjectiveModule::onCreateGameServer(%this)
{
   %this.registerDatablock("./datablocks/ObjectiveMarkers");
   %this.registerDatablock("./datablocks/triggers");
}

//This is called when the server is shut down due to the game/map being exited
function ObjectiveModule::onDestroyGameServer(%this)
{
}

//This is called when the client is initially set up by the game application
function ObjectiveModule::initClient(%this)
{
   //Here, we exec out keybind scripts so the player is able to move when they get into a game
   %this.queueExec("./scripts/client/default.keybinds." @ $TorqueScriptFileExtension);
   
   %prefPath = getPrefpath();
   if(isFile(%prefPath @ "/keybinds." @ $TorqueScriptFileExtension))
      exec(%prefPath @ "/keybinds." @ $TorqueScriptFileExtension);
      
   %this.queueExec("./scripts/profiles");
   %this.queueExec("./guis/ObjectiveTrackerGUI.gui");
   %this.queueExec("./guis/ObjectiveTrackerGUI");
   %this.queueExec("./scripts/client/Objective");
   %this.queueExec("./scripts/client/clientCommands");	
}

//This is called when a client connects to a server
function ObjectiveModule::onCreateClientConnection(%this)
{
   if(!isObject(ClientObjectiveList))
   {
      new ArrayObject(ClientObjectiveList);
   }
}

//This is called when a client disconnects from a server
function ObjectiveModule::onDestroyClientConnection(%this)
{
   ClientObjectiveList.delete(); 
}
